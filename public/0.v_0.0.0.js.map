{"version":3,"sources":["webpack://[name]/./node_modules/devextreme/ui/notify.js","webpack://[name]/./node_modules/devextreme/ui/toast.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,aAAa,mBAAO,CAAC,gEAAgB;AACrC,oBAAoB,mBAAO,CAAC,kFAAyB;AACrD,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,oBAAoB,mBAAO,CAAC,wEAAoB;AAChD,YAAY,mBAAO,CAAC,sDAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,iBAAiB,mBAAO,CAAC,0EAAqB;AAC9C,mBAAmB,mBAAO,CAAC,4FAA8B;AACzD,YAAY,mBAAO,CAAC,8FAA+B;AACnD,kBAAkB,mBAAO,CAAC,4EAAsB;AAChD,gBAAgB,mBAAO,CAAC,wEAAoB;AAC5C,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,cAAc,mBAAO,CAAC,0EAAqB;AAC3C,oBAAoB,mBAAO,CAAC,sEAAmB;AAC/C,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,cAAc,mBAAO,CAAC,0DAAW;AACjC,aAAa,mBAAO,CAAC,wDAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA","file":"0.v_0.0.0.js","sourcesContent":["/**\r\n * DevExtreme (ui/notify.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar Action = require(\"../core/action\");\r\nvar viewPortUtils = require(\"../core/utils/view_port\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar isPlainObject = require(\"../core/utils/type\").isPlainObject;\r\nvar Toast = require(\"./toast\");\r\nvar $notify = null;\r\nvar notify = function(message, type, displayTime) {\r\n    var options = isPlainObject(message) ? message : {\r\n        message: message\r\n    };\r\n    var userHiddenAction = options.onHidden;\r\n    extend(options, {\r\n        type: type,\r\n        displayTime: displayTime,\r\n        onHidden: function(args) {\r\n            $(args.element).remove();\r\n            new Action(userHiddenAction, {\r\n                context: args.model\r\n            }).execute(arguments)\r\n        }\r\n    });\r\n    $notify = $(\"<div>\").appendTo(viewPortUtils.value());\r\n    new Toast($notify, options).show()\r\n};\r\nmodule.exports = notify;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/toast.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar window = require(\"../core/utils/window\").getWindow();\r\nvar domAdapter = require(\"../core/dom_adapter\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar ready = require(\"../core/utils/ready_callbacks\").add;\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar typeUtils = require(\"../core/utils/type\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar inArray = require(\"../core/utils/array\").inArray;\r\nvar pointerEvents = require(\"../events/pointer\");\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar Overlay = require(\"./overlay\");\r\nvar themes = require(\"./themes\");\r\nvar TOAST_CLASS = \"dx-toast\";\r\nvar TOAST_CLASS_PREFIX = TOAST_CLASS + \"-\";\r\nvar TOAST_WRAPPER_CLASS = TOAST_CLASS_PREFIX + \"wrapper\";\r\nvar TOAST_CONTENT_CLASS = TOAST_CLASS_PREFIX + \"content\";\r\nvar TOAST_MESSAGE_CLASS = TOAST_CLASS_PREFIX + \"message\";\r\nvar TOAST_ICON_CLASS = TOAST_CLASS_PREFIX + \"icon\";\r\nvar WIDGET_NAME = \"dxToast\";\r\nvar toastTypes = [\"info\", \"warning\", \"error\", \"success\"];\r\nvar TOAST_STACK = [];\r\nvar FIRST_Z_INDEX_OFFSET = 8e3;\r\nvar visibleToastInstance = null;\r\nvar POSITION_ALIASES = {\r\n    top: {\r\n        my: \"top\",\r\n        at: \"top\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    },\r\n    bottom: {\r\n        my: \"bottom\",\r\n        at: \"bottom\",\r\n        of: null,\r\n        offset: \"0 -20\"\r\n    },\r\n    center: {\r\n        my: \"center\",\r\n        at: \"center\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    },\r\n    right: {\r\n        my: \"center right\",\r\n        at: \"center right\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    },\r\n    left: {\r\n        my: \"center left\",\r\n        at: \"center left\",\r\n        of: null,\r\n        offset: \"0 0\"\r\n    }\r\n};\r\nready(function() {\r\n    eventsEngine.subscribeGlobal(domAdapter.getDocument(), pointerEvents.down, function(e) {\r\n        for (var i = TOAST_STACK.length - 1; i >= 0; i--) {\r\n            if (!TOAST_STACK[i]._proxiedDocumentDownHandler(e)) {\r\n                return\r\n            }\r\n        }\r\n    })\r\n});\r\nvar Toast = Overlay.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            message: \"\",\r\n            type: \"info\",\r\n            displayTime: 2e3,\r\n            position: \"bottom center\",\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    to: 0\r\n                }\r\n            },\r\n            shading: false,\r\n            height: \"auto\",\r\n            closeOnBackButton: false,\r\n            closeOnSwipe: true,\r\n            closeOnClick: false,\r\n            resizeEnabled: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                closeOnOutsideClick: true,\r\n                width: \"auto\",\r\n                position: {\r\n                    at: \"bottom left\",\r\n                    my: \"bottom left\",\r\n                    offset: \"20 -20\"\r\n                },\r\n                animation: {\r\n                    show: {\r\n                        type: \"slide\",\r\n                        duration: 200,\r\n                        from: {\r\n                            position: {\r\n                                my: \"top\",\r\n                                at: \"bottom\",\r\n                                of: window\r\n                            }\r\n                        }\r\n                    },\r\n                    hide: {\r\n                        type: \"slide\",\r\n                        duration: 200,\r\n                        to: {\r\n                            position: {\r\n                                my: \"top\",\r\n                                at: \"bottom\",\r\n                                of: window\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                var isPhone = \"phone\" === _device.deviceType;\r\n                var isAndroid = \"android\" === _device.platform;\r\n                return isPhone && isAndroid\r\n            },\r\n            options: {\r\n                width: function() {\r\n                    return $(window).width()\r\n                },\r\n                position: {\r\n                    at: \"bottom center\",\r\n                    my: \"bottom center\",\r\n                    offset: \"0 0\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isMaterial()\r\n            },\r\n            options: {\r\n                minWidth: 344,\r\n                maxWidth: 568,\r\n                displayTime: 4e3\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._posStringToObject()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (this.option(\"message\")) {\r\n            this._message = $(\"<div>\").addClass(TOAST_MESSAGE_CLASS).text(this.option(\"message\")).appendTo(this.$content())\r\n        }\r\n        this.setAria(\"role\", \"alert\", this._message);\r\n        if (inArray(this.option(\"type\").toLowerCase(), toastTypes) > -1) {\r\n            this.$content().prepend($(\"<div>\").addClass(TOAST_ICON_CLASS))\r\n        }\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TOAST_CLASS);\r\n        this._wrapper().addClass(TOAST_WRAPPER_CLASS);\r\n        this._$content.addClass(TOAST_CLASS_PREFIX + String(this.option(\"type\")).toLowerCase());\r\n        this.$content().addClass(TOAST_CONTENT_CLASS);\r\n        this._toggleCloseEvents(\"Swipe\");\r\n        this._toggleCloseEvents(\"Click\")\r\n    },\r\n    _renderScrollTerminator: commonUtils.noop,\r\n    _toggleCloseEvents: function(event) {\r\n        var dxEvent = \"dx\" + event.toLowerCase();\r\n        eventsEngine.off(this._$content, dxEvent);\r\n        this.option(\"closeOn\" + event) && eventsEngine.on(this._$content, dxEvent, this.hide.bind(this))\r\n    },\r\n    _posStringToObject: function() {\r\n        if (!typeUtils.isString(this.option(\"position\"))) {\r\n            return\r\n        }\r\n        var verticalPosition = this.option(\"position\").split(\" \")[0];\r\n        var horizontalPosition = this.option(\"position\").split(\" \")[1];\r\n        this.option(\"position\", extend({}, POSITION_ALIASES[verticalPosition]));\r\n        switch (horizontalPosition) {\r\n            case \"center\":\r\n            case \"left\":\r\n            case \"right\":\r\n                this.option(\"position\").at += \" \" + horizontalPosition;\r\n                this.option(\"position\").my += \" \" + horizontalPosition\r\n        }\r\n    },\r\n    _show: function() {\r\n        if (visibleToastInstance && visibleToastInstance !== this) {\r\n            clearTimeout(visibleToastInstance._hideTimeout);\r\n            visibleToastInstance.hide()\r\n        }\r\n        visibleToastInstance = this;\r\n        return this.callBase.apply(this, arguments).done(function() {\r\n            clearTimeout(this._hideTimeout);\r\n            this._hideTimeout = setTimeout(this.hide.bind(this), this.option(\"displayTime\"))\r\n        }.bind(this))\r\n    },\r\n    _hide: function() {\r\n        visibleToastInstance = null;\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _overlayStack: function() {\r\n        return TOAST_STACK\r\n    },\r\n    _zIndexInitValue: function() {\r\n        return this.callBase() + FIRST_Z_INDEX_OFFSET\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._hideTimeout);\r\n        visibleToastInstance = null;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"type\":\r\n                this._$content.removeClass(TOAST_CLASS_PREFIX + args.previousValue);\r\n                this._$content.addClass(TOAST_CLASS_PREFIX + String(args.value).toLowerCase());\r\n                break;\r\n            case \"message\":\r\n                if (this._message) {\r\n                    this._message.text(args.value)\r\n                }\r\n                break;\r\n            case \"closeOnSwipe\":\r\n                this._toggleCloseEvents(\"Swipe\");\r\n                break;\r\n            case \"closeOnClick\":\r\n                this._toggleCloseEvents(\"Click\");\r\n                break;\r\n            case \"displayTime\":\r\n            case \"position\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(WIDGET_NAME, Toast);\r\nmodule.exports = Toast;\r\nmodule.exports.default = module.exports;\r\n"],"sourceRoot":""}